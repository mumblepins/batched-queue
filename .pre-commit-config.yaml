fail_fast: true
default_install_hook_types:
  - pre-commit
  - post-commit
  - pre-merge-commit
repos:
  #  - repo: https://github.com/andreoliwa/nitpick
  #    rev: "v0.35.0"
  #    hooks:
  #      - id: nitpick
  - repo: https://github.com/python-poetry/poetry
    rev: "1.8.0"
    hooks:
      - id: poetry-check
        files: (pyproject.toml|poetry.lock)

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v4.0.0-alpha.8"
    hooks:
      - id: prettier
        additional_dependencies:
          - prettier
          - prettier-plugin-toml
          - "@prettier/plugin-xml"
          - prettier-plugin-sh
        exclude: "(^.idea.*|^CHANGELOG.md)"
  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.4.4
    hooks:
      # Run the linter.
      - id: ruff
        args: [--fix]
      # Run the formatter.
      - id: ruff-format
  #  - repo: https://github.com/pycqa/isort
  #    rev: 5.13.2
  #    hooks:
  #      - id: isort
  #  - repo: https://github.com/ambv/black
  #    rev: 24.3.0
  #    hooks:
  #      - id: black
  #        language_version: python3

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-toml
      - id: check-yaml
        exclude: "(template.yaml)$"
      - id: detect-private-key
        exclude: "(tests/resources/.*)"
      - id: end-of-file-fixer
        exclude: "[CHANGELOG.md]"
      - id: mixed-line-ending
        args:
          - --fix=auto
      - id: trailing-whitespace
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods
      - id: python-no-log-warn
  - repo: local
    hooks:
      - id: pyright
        name: pyright
        entry: >
          poetry run
          pyright
        language: system
        types: [python]
        pass_filenames: false
      - id: pytest-local
        name: pytest-local
        description: Run pytest in the local virtualenv
        stages: [manual]
        entry: >
          poetry run pytest
          -n 4
          --dist worksteal
          --verbose
          --cov
          --cov-report=html --cov-report=term --cov-report=xml
          --junitxml=junit.xml
        language: system
        pass_filenames: false
        always_run: true
        types: [python]
        verbose: true
  - repo: local
    hooks:
      - id: gitchangelog
        language: system
        always_run: true
        pass_filenames: false
        name: Generate changelog
        entry: bash -c "GITCHANGELOG_CONFIG_FILENAME='.config/.gitchangelog.rc' gitchangelog
          > CHANGELOG.md"
        stages:
          - post-commit
          - pre-merge-commit
